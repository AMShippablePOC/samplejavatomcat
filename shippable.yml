language: java

jdk:
  - oraclejdk8

branches:
  only:
    - github-beta

env:
  global:
    - secure: KoN8b51w1Ar0D9/G42hxuGHUrmZV03DdYMFwCuj9Xd18fdJBThO79b6rmY4KAdAGaEo8hD9dwa1RWwIJFgNy9VLM26NfLqCKfsl1E08ZSDz/5k3gmDTqI5v8fo2oLQoZ9O1iX+8kqMUF+00he8kFb5dRTm8+kXMfQmsyNwAJVXP3PZXWGSeazw7id3+7SBbeIKLIeyXKWlHp7+CPVHv6kXwZjGSLqZj8munKy7Ms62JW/B88fiZg87JnMGVCNY4bqRpiDNXtcLgAe4dgifFmWSJx8zWg1Ap6CtRWJWpFUAeXKayMWZ2tO+iiT5Xd0BqlGMAtti1aBe9bdwVENBI1gA==

build:
  ci:
    - mkdir -p shippable/testresults && mkdir -p shippable/codecoverage
    - sed -i "s/{PASSWORD}/$PASSWORD/" .m2/settings.xml
    - cat .m2/settings.xml
    - ls $SHIPPABLE_BUILD_DIR
    - mvn -q -B -s .m2/settings.xml -U clean cobertura:cobertura # deploy
    - ls $SHIPPABLE_BUILD_DIR
    - ls $SHIPPABLE_BUILD_DIR/target
    - docker build -t amshippablepoc/javahelloworld:$BRANCH.$BUILD_NUMBER .
    - docker push amshippablepoc/javahelloworld:$BRANCH.$BUILD_NUMBER

integrations:
  hub:
    - integrationName: DockerHub
      type: docker

  notifications:
    - integrationName: trigger-javahello-pipeline
      type: webhook
      payload:
        - versionName=$BRANCH.$BUILD_NUMBER
      branches:
        only:
          - github-beta
      on_success: always
      on_failure: never
      on_start: never
